// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Compares product names, quantities, discounts, and taxes between a purchase order and a sales order using AI.
 *
 * - compareOrderDetails - Compares order details and identifies discrepancies.
 * - CompareOrderDetailsInput - The input type for the compareOrderDetails function.
 * - CompareOrderDetailsOutput - The output type for the compareOrderDetails function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CompareOrderDetailsInputSchema = z.object({
  purchaseOrder: z.string().describe('The purchase order details as a string.'),
  salesOrder: z.string().describe('The sales order details as a string.'),
});
export type CompareOrderDetailsInput = z.infer<typeof CompareOrderDetailsInputSchema>;

const DiscrepancySchema = z.object({
  field: z.string().describe('The field with a discrepancy (e.g., product name, quantity, discount, tax).'),
  purchaseOrderValue: z.string().describe('The value from the purchase order.'),
  salesOrderValue: z.string().describe('The value from the sales order.'),
  reason: z.string().describe('The reason for the discrepancy.'),
});

const CompareOrderDetailsOutputSchema = z.object({
  discrepancies: z.array(DiscrepancySchema).describe('An array of discrepancies found between the purchase order and sales order.'),
  summary: z.string().describe('A summary of the comparison, highlighting key discrepancies.'),
});

export type CompareOrderDetailsOutput = z.infer<typeof CompareOrderDetailsOutputSchema>;

export async function compareOrderDetails(input: CompareOrderDetailsInput): Promise<CompareOrderDetailsOutput> {
  return compareOrderDetailsFlow(input);
}

const compareOrderDetailsPrompt = ai.definePrompt({
  name: 'compareOrderDetailsPrompt',
  input: {
    schema: CompareOrderDetailsInputSchema,
  },
  output: {
    schema: CompareOrderDetailsOutputSchema,
  },
  prompt: `You are an AI assistant specializing in comparing purchase orders and sales orders.
  Your task is to identify discrepancies in product names, quantities, discounts, and taxes between the two orders.

  Analyze the following purchase order and sales order details:

  Purchase Order:
  {{purchaseOrder}}

  Sales Order:
  {{salesOrder}}

  Identify any discrepancies and provide a detailed report, including the field with the discrepancy, the values from both orders, and the reason for the discrepancy.
  Also provide a summary of the comparison, highlighting the key discrepancies.
  `,
});

const compareOrderDetailsFlow = ai.defineFlow(
  {
    name: 'compareOrderDetailsFlow',
    inputSchema: CompareOrderDetailsInputSchema,
    outputSchema: CompareOrderDetailsOutputSchema,
  },
  async input => {
    const {output} = await compareOrderDetailsPrompt(input);
    return output!;
  }
);
